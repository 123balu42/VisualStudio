<uirx:ViewUserControl x:Class="GitHub.VisualStudio.UI.Views.Controls.RepositoryCloneControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="clr-namespace:GitHub.UI;assembly=GitHub.UI"
             xmlns:uirx="clr-namespace:GitHub.UI;assembly=GitHub.UI.Reactive"
             xmlns:local="clr-namespace:GitHub.VisualStudio.UI.Views.Controls"
             xmlns:helpers="clr-namespace:GitHub.Helpers;assembly=GitHub.UI"
             xmlns:sampleData="clr-namespace:GitHub.SampleData;assembly=GitHub.App"
             xmlns:GitHub="clr-namespace:GitHub.VisualStudio.Helpers"
             mc:Ignorable="d"
             d:DesignWidth="414"
             d:DesignHeight="432"
             Background="Transparent">
    <d:DesignProperties.DataContext>
        <Binding>
            <Binding.Source>
                <sampleData:RepositoryCloneViewModelDesigner />
            </Binding.Source>
        </Binding>
    </d:DesignProperties.DataContext>

    <DockPanel LastChildFill="True">
        <ui:FilterTextBox
		    x:Name="filterText" 
            DockPanel.Dock="Top"
		    PromptText="Search repositories" 
		    Margin="10" />
        
        <ui:GitHubProgressBar
            x:Name="loadingProgressBar"
            DockPanel.Dock="Top"
            Foreground="{DynamicResource GitHubAccentBrush}"
            Style="{DynamicResource GitHubProgressBar}"
            HorizontalContentAlignment="Stretch"
            Visibility="Visible"
            IsIndeterminate="True"
            Margin="0" />

        <ui:OcticonCircleButton
            DockPanel.Dock="Bottom"
			IsDefault="True"
            Margin="12"
			x:Name="cloneButton"
			HorizontalAlignment="Center"
			Icon="check">
            <TextBlock>Clone</TextBlock>
        </ui:OcticonCircleButton>

        <Border
            x:Name="repositoriesListPane"
            FocusManager.IsFocusScope="True"
            FocusVisualStyle="{x:Null}"
            BorderBrush="#EAEAEA"
            BorderThickness="0,1"
            Margin="0">
            <Border.Resources>
                <Style TargetType="{x:Type ui:TrimmedTextBlock}" BasedOn="{StaticResource GitHubTextBlock}">
                    <Style.Triggers>
                        <Trigger Property="IsTextTrimmed" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="cloneRepoHeaderStyle" TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource GHTextBrush}" />
                    <Setter Property="Margin" Value="0,6,12,6" />
                </Style>
                <Style x:Key="repositoryBorderStyle" TargetType="Border">
                    <Setter Property="BorderBrush" Value="#EAEAEA" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Margin" Value="0" />
                </Style>
            </Border.Resources>
			<ListBox
				x:Name="repositoryList"
				HorizontalContentAlignment="Stretch"
                ItemsSource="{Binding FilteredRepositories}"
				Style="{DynamicResource LightListBox}">
				<ListBox.GroupStyle>
					<GroupStyle HidesIfEmpty="true">
						<GroupStyle.ContainerStyle>
							<Style TargetType="{x:Type GroupItem}">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type GroupItem}">
											<StackPanel Orientation="Vertical" Margin="0">
												<Border
													Background="#F8F8F8"
													Style="{StaticResource repositoryBorderStyle}">
													<StackPanel
														Orientation="Horizontal"
														VerticalAlignment="Center"
														Margin="0">
														<Image
															x:Name="avatar"
															Width="16"
															Height="16"
															Margin="10,0,6,0"
															RenderOptions.BitmapScalingMode="HighQuality"
															Source="{Binding Items[0].Owner.Avatar}" />
                                                        <TextBlock
															Text="{Binding Path=Name}"
															Style="{StaticResource cloneRepoHeaderStyle}" />
													</StackPanel>
												</Border>
												<ItemsPresenter Margin="0" />
											</StackPanel>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</GroupStyle.ContainerStyle>
					</GroupStyle>
				</ListBox.GroupStyle>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Border Style="{StaticResource repositoryBorderStyle}">
							<StackPanel
								Orientation="Horizontal"
								VerticalAlignment="Center"
								Margin="0">
								<ui:OcticonImage
									x:Name="iconPath" 
									Width="16"
									Height="16" 
									Margin="32,0,6,0" 
									VerticalAlignment="Center"
									Icon="{Binding Icon}"
									Foreground="#D0D0D0" />
								
								<ui:TrimmedTextBlock
                                    x:Name="label"
									VerticalAlignment="Center"
									Text="{Binding Name}"
									Foreground="#666"
									TextTrimming="CharacterEllipsis" />
							</StackPanel>
						</Border>
						<DataTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
									<Condition Binding="{Binding Path=(Selector.IsSelectionActive), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True" />
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="Foreground" Value="White" TargetName="iconPath" />
                                    <Setter Property="Foreground" Value="White" TargetName="label" />
                                </MultiDataTrigger.Setters>
							</MultiDataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</Border>
    </DockPanel>
</uirx:ViewUserControl>
